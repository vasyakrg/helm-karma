# Default values for karma.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: ghcr.io/prymitive/karma
  tag: v0.121
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# https://www.stakater.com/post/stakater-reloader
# helm repo add stakater https://stakater.github.io/stakater-charts
stakaterReloader:
  enabled: true

config:
  # Karma config in YAML format.
  # See https://github.com/prymitive/karma/blob/master/docs/CONFIGURATION.md for details.
  alertmanager:
    interval: 20s
    servers:
      - name: infra
        uri: http://demo-alerts.domain.ru
        timeout: 10s
        proxy: true
        readonly: false
        healthcheck:
          visible: false
          filters:
            prometheus:
              - prometheus=monitoring/in-cluster-monitoring-kube-prometheus
              - alertname=Watchdog

  listen:
    address: "0.0.0.0"
    port: 8080
    prefix: /
  log:
    config: false
    level: info
    timestamp: true
  receivers:
    keep: []
    strip: []
  ui:
    refresh: 10s
    hideFiltersWhenIdle: true
    colorTitlebar: true
    theme: auto
    animations: true
    minimalGroupWidth: 420
    alertsPerGroup: 6
    multiGridLabel: severity
    multiGridSortReverse: false
    collapseGroups: expanded
  debug: false
  karma:
    name: demo-karma
  labels:
    order:
      - node
      - job
    color:
      static:
        - job
      unique:
        - cluster
        - node
        - type
        # - "@receiver"
        - "@cluster"
      custom:
        severity:
          - value: none
            color: "#87c4e0"
          - value: info
            color: "#87c4e0"
          - value: warning
            color: "#ffae42"
          - value: critical
            color: "#ff220c"
    valueOnly:
      - severity
      - job
      - "@cluster"
    strip_re:
      - "app.*"
      - "alertname.*"
      - "helm.*"
      - "issue.*"
      # - "cluster.*"
      - "io_castle.*"
      - "service.*"
      - "instance.*"
      - "receiver.*"
      - "@receiver.*"
      - "prometheus.*"
      - "namespace.*"
      - "endpoint.*"
  annotations:
    default:
      hidden: true
    hidden: []
    visible:
      - summary
    keep: []
    order:
      - summary
      - description

  grid:
    sorting:
      order: label
      reverse: false
      label: severity
      customValues:
        labels:
          severity:
            critical: 1
            warning: 2
            info: 3

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   nginx.ingress.kubernetes.io/auth-url: http://authelia.authelia.svc.cluster.local/api/verify
  #   nginx.ingress.kubernetes.io/auth-signin: https://auth.domain.ru
  #   nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
  #   nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
  #   nginx.ingress.kubernetes.io/configuration-snippet: proxy_set_header X-Forwarded-Method $request_method;
  path: /
  hosts:
    - karma.domain.ru
  tls:
    - secretName: tls-domain-self
      hosts:
        - karma.domain.ru

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
